/*
Copyright 2019 Rohith Jayawardene <info@appvia.io>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/appvia/hub-apis/pkg/apis/core/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OAuthProviderLister helps list OAuthProviders.
type OAuthProviderLister interface {
	// List lists all OAuthProviders in the indexer.
	List(selector labels.Selector) (ret []*v1.OAuthProvider, err error)
	// OAuthProviders returns an object that can list and get OAuthProviders.
	OAuthProviders(namespace string) OAuthProviderNamespaceLister
	OAuthProviderListerExpansion
}

// oAuthProviderLister implements the OAuthProviderLister interface.
type oAuthProviderLister struct {
	indexer cache.Indexer
}

// NewOAuthProviderLister returns a new OAuthProviderLister.
func NewOAuthProviderLister(indexer cache.Indexer) OAuthProviderLister {
	return &oAuthProviderLister{indexer: indexer}
}

// List lists all OAuthProviders in the indexer.
func (s *oAuthProviderLister) List(selector labels.Selector) (ret []*v1.OAuthProvider, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.OAuthProvider))
	})
	return ret, err
}

// OAuthProviders returns an object that can list and get OAuthProviders.
func (s *oAuthProviderLister) OAuthProviders(namespace string) OAuthProviderNamespaceLister {
	return oAuthProviderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OAuthProviderNamespaceLister helps list and get OAuthProviders.
type OAuthProviderNamespaceLister interface {
	// List lists all OAuthProviders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.OAuthProvider, err error)
	// Get retrieves the OAuthProvider from the indexer for a given namespace and name.
	Get(name string) (*v1.OAuthProvider, error)
	OAuthProviderNamespaceListerExpansion
}

// oAuthProviderNamespaceLister implements the OAuthProviderNamespaceLister
// interface.
type oAuthProviderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OAuthProviders in the indexer for a given namespace.
func (s oAuthProviderNamespaceLister) List(selector labels.Selector) (ret []*v1.OAuthProvider, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.OAuthProvider))
	})
	return ret, err
}

// Get retrieves the OAuthProvider from the indexer for a given namespace and name.
func (s oAuthProviderNamespaceLister) Get(name string) (*v1.OAuthProvider, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("oauthprovider"), name)
	}
	return obj.(*v1.OAuthProvider), nil
}
