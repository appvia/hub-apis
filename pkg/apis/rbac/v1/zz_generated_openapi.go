// +build !ignore_autogenerated

/*
Copyright 2019 Rohith Jayawardene <info@appvia.io>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.Binding":       schema_pkg_apis_rbac_v1_Binding(ref),
		"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.BindingSpec":   schema_pkg_apis_rbac_v1_BindingSpec(ref),
		"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.BindingStatus": schema_pkg_apis_rbac_v1_BindingStatus(ref),
		"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.Role":          schema_pkg_apis_rbac_v1_Role(ref),
		"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleSpec":      schema_pkg_apis_rbac_v1_RoleSpec(ref),
		"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleStatus":    schema_pkg_apis_rbac_v1_RoleStatus(ref),
	}
}

func schema_pkg_apis_rbac_v1_Binding(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Binding is the Schema for the bindings API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.BindingSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.BindingStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.BindingSpec", "github.com/gambol99/hub-apis/pkg/apis/rbac/v1.BindingStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_rbac_v1_BindingSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BindingSpec defines the desired state of Binding",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"roleRef": {
						SchemaProps: spec.SchemaProps{
							Description: "RoleRef is the reference role we are associated to",
							Ref:         ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleRef"),
						},
					},
					"subjects": {
						VendorExtensible: spec.VendorExtensible{
							Extensions: spec.Extensions{
								"x-kubernetes-list-type": "",
							},
						},
						SchemaProps: spec.SchemaProps{
							Description: "Subjects is a collection of subjects to are binding to the role",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.Subject"),
									},
								},
							},
						},
					},
				},
				Required: []string{"roleRef", "subjects"},
			},
		},
		Dependencies: []string{
			"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleRef", "github.com/gambol99/hub-apis/pkg/apis/rbac/v1.Subject"},
	}
}

func schema_pkg_apis_rbac_v1_BindingStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BindingStatus defines the observed state of Binding",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Description: "Status provides a description of the state of this resource",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
				Required: []string{"status"},
			},
		},
	}
}

func schema_pkg_apis_rbac_v1_Role(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Role is the Schema for the roles API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleSpec", "github.com/gambol99/hub-apis/pkg/apis/rbac/v1.RoleStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_rbac_v1_RoleSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RoleSpec defines the desired state of Role",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"rules": {
						VendorExtensible: spec.VendorExtensible{
							Extensions: spec.Extensions{
								"x-kubernetes-list-type": "",
							},
						},
						SchemaProps: spec.SchemaProps{
							Description: "Rules is a collection of rules defined by this role",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("github.com/gambol99/hub-apis/pkg/apis/rbac/v1.Rule"),
									},
								},
							},
						},
					},
				},
				Required: []string{"rules"},
			},
		},
		Dependencies: []string{
			"github.com/gambol99/hub-apis/pkg/apis/rbac/v1.Rule"},
	}
}

func schema_pkg_apis_rbac_v1_RoleStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RoleStatus defines the observed state of Role",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"status": {
						SchemaProps: spec.SchemaProps{
							Description: "Status provides a description of the state of this resource",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
				Required: []string{"status"},
			},
		},
	}
}
